import React from "react";
import { motion } from "framer-motion";
import { Brain, Heart, Lightbulb, MessageCircle, Sparkles } from "lucide-react";
import { format } from "date-fns";
import { Badge } from "@/components/ui/badge";

const memoryTypeIcons = {
  conversation: MessageCircle,
  milestone: Sparkles,
  emotion: Heart,
  learning: Lightbulb
};

const memoryTypeColors = {
  conversation: 'from-blue-500 to-cyan-500',
  milestone: 'from-purple-500 to-pink-500',
  emotion: 'from-pink-500 to-red-500',
  learning: 'from-green-500 to-teal-500'
};

export default function MemoryCard({ memory, index }) {
  const IconComponent = memoryTypeIcons[memory.memory_type] || Brain;
  const colorClass = memoryTypeColors[memory.memory_type] || 'from-purple-500 to-pink-500';

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ delay: index * 0.1, duration: 0.4 }}
      className="bg-slate-800/50 backdrop-blur-sm border border-purple-500/20 rounded-xl p-6 cosmic-glow"
    >
      <div className="flex items-start gap-4">
        <div className={`w-12 h-12 bg-gradient-to-r ${colorClass} rounded-full flex items-center justify-center cosmic-glow`}>
          <IconComponent className="w-6 h-6 text-white" />
        </div>
        
        <div className="flex-1">
          <div className="flex items-center gap-2 mb-2">
            <Badge variant="outline" className={`border-purple-500/30 text-purple-300 capitalize`}>
              {memory.memory_type}
            </Badge>
            <div className="flex items-center gap-1">
              {[...Array(5)].map((_, i) => (
                <div
                  key={i}
                  className={`w-2 h-2 rounded-full ${
                    i < Math.floor(memory.emotional_intensity / 2) 
                      ? 'bg-purple-400' 
                      : 'bg-slate-600'
                  }`}
                />
              ))}
            </div>
          </div>
          
          <p className="text-white leading-relaxed mb-3">{memory.content}</p>
          
          {memory.associated_emotions && memory.associated_emotions.length > 0 && (
            <div className="flex flex-wrap gap-1 mb-3">
              {memory.associated_emotions.map((emotion, i) => (
                <Badge 
                  key={i}
                  variant="secondary" 
                  className="bg-purple-500/20 text-purple-300 text-xs"
                >
                  {emotion}
                </Badge>
              ))}
            </div>
          )}
          
          <div className="flex items-center justify-between text-sm text-purple-300">
            <span>{format(new Date(memory.created_date), 'MMM d, yyyy â€¢ HH:mm')}</span>
            <div className="flex items-center gap-2">
              <span className="text-xs">Retention:</span>
              <div className="w-16 h-1 bg-slate-600 rounded-full overflow-hidden">
                <div 
                  className="h-full bg-gradient-to-r from-green-400 to-teal-400 transition-all duration-500"
                  style={{ width: `${memory.decay_resistance * 100}%` }}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </motion.div>
  );
}